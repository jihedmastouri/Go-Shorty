syntax = "proto3";

package proto;

option go_package = "./proto;proto";


message Block {
  string block_id = 1 [json_name = "id"];
  string name = 2;
  string type = 3;
  string lang = 4;
  int32 version = 5;
  repeated string tags = 6;
  repeated string categories = 7;
  repeated Author authors = 8;
  repeated ElementType content = 9;
  repeated BlockContent children = 10;
  BlockRules rules = 11;
  string updated_at = 12 [json_name = "updatedAt"];
  string created_at = 13 [json_name = "createdAt"];
  string description = 14;
}

message BlockContent {
  string block_id = 1;
  string name = 2;
  string lang = 3;
  int32 version = 4;
  repeated ElementType content = 5;
  repeated BlockContent children = 6;
}

message BlockMeta {
  string block_id = 1;
  string name = 2;
  string type = 3;
  repeated string tags = 4;
  repeated string categories = 5;
  repeated Author authors = 6;
  string description = 7;
}

message Author {
  string id = 1;
  string name = 2;
  string image = 3;
}


message BlockRules {
  string rule_name = 1;
  string description = 2;
  bool nested = 3;
  bool has_likes = 4;
  bool has_comments = 5;
  bool comments_has_likes = 7;
  bool comments_editable = 8;
  int32 comments_max_nested = 9;
}

message ElementType {
  oneof Element {
    Media media = 1;
    Textual text = 2;
  }
}

message Media {
  string title = 1;
  MediaType type = 2;
  string file = 3;
  string alt = 4;
}

message Textual {
  string name = 1;
  TextualType type = 2;
  string content = 3;
  string hint = 4;
}


enum TextualType {
  TEXTUAL_TYPE_UNKNOWN = 0;
  TEXTUAL_TYPE_TEXT = 1;
  TEXTUAL_TYPE_CODE = 2;
  TEXTUAL_TYPE_HTML = 3;
  TEXTUAL_TYPE_MARKDOWN = 4;
}

enum MediaType {
  MEDIA_TYPE_UNKNOWN = 0;
  MEDIA_TYPE_IMAGE = 1;
  MEDIA_TYPE_VIDEO = 2;
  MEDIA_TYPE_AUDIO = 3;
  MEDIA_TYPE_FILE = 4;
}
