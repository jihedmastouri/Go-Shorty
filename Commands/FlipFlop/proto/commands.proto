syntax = "proto3";

package proto;

option go_package = "./proto;proto";

import "Shared/proto/block.proto";

service FlipFlop {
  // Block
  rpc CreateBlock(CreateRequest) returns (ActionResponse) {}
  rpc UpdateBlock(CreateRequest) returns (ActionResponse) {}
  rpc DeleteBlock(DeleteRequest) returns (ActionResponse) {}

  rpc CreateBlockLang(CreateLangRequest) returns (ActionResponse) {}
  rpc DeleteBlockLang(DeleteLangRequest) returns (ActionResponse) {}

  // Rules
  rpc CreateBlockRule(BlockRules) returns (ActionResponse) {}
  rpc UpdateBlockRule(BlockRules) returns (ActionResponse) {}
  rpc DeleteBlockRule(BlockRules) returns (ActionResponse) {}

  // Taxonomy:
  // rpc CreateTag(CreateTaxonomy) returns (ActionResponse) {}
  // rpc DeleteTag(DeleteTaxonomy) returns (ActionResponse) {}
  // rpc JoinBlockTag(JoinTaxonomy) returns (ActionResponse) {}

  // rpc CreateCategory(CreateTaxonomy) returns (ActionResponse) {}
  // rpc DeleteCategory(DeleteTaxonomy) returns (ActionResponse) {}
  // rpc JoinBlockCategory(JoinTaxonomy) returns (ActionResponse) {}
}

message CreateRequest {
    BlockMeta meta = 1;
    optional BlockRules rules = 2;
    string author = 3;
}

message CreateLangRequest {
    string id = 1;
    string langName = 2;
    optional string previousLang = 3;
    string author = 4;
}

message DeleteRequest {
    string id = 1;
    string author = 2;
}

message DeleteLangRequest {
    string id = 1;
    string langName = 2;
    string author = 3;
}

message CreateTaxonomy {
    string name = 1;
    string descr = 2;
}

message DeleteTaxonomy {
    string name = 1;
}

message JoinTaxonomy {
    string name = 1;
    string block_id = 2;
}

message ActionResponse {
    bool isSuceess = 1;
    string id = 2;
    string message = 3;
}
