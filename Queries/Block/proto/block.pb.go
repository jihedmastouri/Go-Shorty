// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.6
// source: Shared/proto/block.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId    string      `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Type       string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Lang       string      `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Version    int32       `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Tags       []string    `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories []string    `protobuf:"bytes,6,rep,name=categories,proto3" json:"categories,omitempty"`
	Authors    []*Author   `protobuf:"bytes,7,rep,name=authors,proto3" json:"authors,omitempty"`
	Content    []*Element  `protobuf:"bytes,8,rep,name=content,proto3" json:"content,omitempty"`
	Rules      *BlockRules `protobuf:"bytes,9,opt,name=rules,proto3" json:"rules,omitempty"`
	UpdatedAt  string      `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt  string      `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *Block) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Block) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *Block) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Block) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Block) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Block) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *Block) GetContent() []*Element {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Block) GetRules() *BlockRules {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Block) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Block) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type BlockContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId string     `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Lang    string     `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Version int32      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Content []*Element `protobuf:"bytes,4,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *BlockContent) Reset() {
	*x = BlockContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockContent) ProtoMessage() {}

func (x *BlockContent) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockContent.ProtoReflect.Descriptor instead.
func (*BlockContent) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{1}
}

func (x *BlockContent) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *BlockContent) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *BlockContent) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockContent) GetContent() []*Element {
	if x != nil {
		return x.Content
	}
	return nil
}

type BlockMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockId    string    `protobuf:"bytes,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Type       string    `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Tags       []string  `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	Categories []string  `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	Authors    []*Author `protobuf:"bytes,5,rep,name=authors,proto3" json:"authors,omitempty"`
	UpdatedAt  string    `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt  string    `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *BlockMeta) Reset() {
	*x = BlockMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMeta) ProtoMessage() {}

func (x *BlockMeta) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMeta.ProtoReflect.Descriptor instead.
func (*BlockMeta) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{2}
}

func (x *BlockMeta) GetBlockId() string {
	if x != nil {
		return x.BlockId
	}
	return ""
}

func (x *BlockMeta) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BlockMeta) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *BlockMeta) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *BlockMeta) GetAuthors() []*Author {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *BlockMeta) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *BlockMeta) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Author) Reset() {
	*x = Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Author) ProtoMessage() {}

func (x *Author) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Author.ProtoReflect.Descriptor instead.
func (*Author) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{3}
}

func (x *Author) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Author) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type BlockRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasLikes     *bool                    `protobuf:"varint,3,opt,name=has_likes,json=hasLikes,proto3,oneof" json:"has_likes,omitempty"`
	HasComments  *bool                    `protobuf:"varint,4,opt,name=has_comments,json=hasComments,proto3,oneof" json:"has_comments,omitempty"`
	CommentRules *BlockRules_CommentRules `protobuf:"bytes,5,opt,name=commentRules,proto3,oneof" json:"commentRules,omitempty"`
}

func (x *BlockRules) Reset() {
	*x = BlockRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRules) ProtoMessage() {}

func (x *BlockRules) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRules.ProtoReflect.Descriptor instead.
func (*BlockRules) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{4}
}

func (x *BlockRules) GetHasLikes() bool {
	if x != nil && x.HasLikes != nil {
		return *x.HasLikes
	}
	return false
}

func (x *BlockRules) GetHasComments() bool {
	if x != nil && x.HasComments != nil {
		return *x.HasComments
	}
	return false
}

func (x *BlockRules) GetCommentRules() *BlockRules_CommentRules {
	if x != nil {
		return x.CommentRules
	}
	return nil
}

type Element struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Element:
	//
	//	*Element_I
	//	*Element_T
	//	*Element_Rt
	//	*Element_Child
	Element isElement_Element `protobuf_oneof:"element"`
}

func (x *Element) Reset() {
	*x = Element{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element) ProtoMessage() {}

func (x *Element) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element.ProtoReflect.Descriptor instead.
func (*Element) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{5}
}

func (m *Element) GetElement() isElement_Element {
	if m != nil {
		return m.Element
	}
	return nil
}

func (x *Element) GetI() *Element_Image {
	if x, ok := x.GetElement().(*Element_I); ok {
		return x.I
	}
	return nil
}

func (x *Element) GetT() *Element_Text {
	if x, ok := x.GetElement().(*Element_T); ok {
		return x.T
	}
	return nil
}

func (x *Element) GetRt() *Element_RichText {
	if x, ok := x.GetElement().(*Element_Rt); ok {
		return x.Rt
	}
	return nil
}

func (x *Element) GetChild() *BlockContent {
	if x, ok := x.GetElement().(*Element_Child); ok {
		return x.Child
	}
	return nil
}

type isElement_Element interface {
	isElement_Element()
}

type Element_I struct {
	I *Element_Image `protobuf:"bytes,1,opt,name=i,proto3,oneof"`
}

type Element_T struct {
	T *Element_Text `protobuf:"bytes,2,opt,name=t,proto3,oneof"`
}

type Element_Rt struct {
	Rt *Element_RichText `protobuf:"bytes,3,opt,name=rt,proto3,oneof"`
}

type Element_Child struct {
	Child *BlockContent `protobuf:"bytes,4,opt,name=child,proto3,oneof"`
}

func (*Element_I) isElement_Element() {}

func (*Element_T) isElement_Element() {}

func (*Element_Rt) isElement_Element() {}

func (*Element_Child) isElement_Element() {}

type BlockRules_CommentRules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested    *bool  `protobuf:"varint,1,opt,name=nested,proto3,oneof" json:"nested,omitempty"`
	HasLikes  *bool  `protobuf:"varint,2,opt,name=has_likes,json=hasLikes,proto3,oneof" json:"has_likes,omitempty"`
	Editable  *bool  `protobuf:"varint,3,opt,name=editable,proto3,oneof" json:"editable,omitempty"`
	MaxNested *int32 `protobuf:"varint,4,opt,name=max_nested,json=maxNested,proto3,oneof" json:"max_nested,omitempty"`
}

func (x *BlockRules_CommentRules) Reset() {
	*x = BlockRules_CommentRules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRules_CommentRules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRules_CommentRules) ProtoMessage() {}

func (x *BlockRules_CommentRules) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRules_CommentRules.ProtoReflect.Descriptor instead.
func (*BlockRules_CommentRules) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{4, 0}
}

func (x *BlockRules_CommentRules) GetNested() bool {
	if x != nil && x.Nested != nil {
		return *x.Nested
	}
	return false
}

func (x *BlockRules_CommentRules) GetHasLikes() bool {
	if x != nil && x.HasLikes != nil {
		return *x.HasLikes
	}
	return false
}

func (x *BlockRules_CommentRules) GetEditable() bool {
	if x != nil && x.Editable != nil {
		return *x.Editable
	}
	return false
}

func (x *BlockRules_CommentRules) GetMaxNested() int32 {
	if x != nil && x.MaxNested != nil {
		return *x.MaxNested
	}
	return 0
}

type Element_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	File  string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Alt   string `protobuf:"bytes,3,opt,name=alt,proto3" json:"alt,omitempty"`
}

func (x *Element_Image) Reset() {
	*x = Element_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element_Image) ProtoMessage() {}

func (x *Element_Image) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element_Image.ProtoReflect.Descriptor instead.
func (*Element_Image) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Element_Image) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Element_Image) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Element_Image) GetAlt() string {
	if x != nil {
		return x.Alt
	}
	return ""
}

type Element_RichText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Html string `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
	Hint string `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *Element_RichText) Reset() {
	*x = Element_RichText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element_RichText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element_RichText) ProtoMessage() {}

func (x *Element_RichText) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element_RichText.ProtoReflect.Descriptor instead.
func (*Element_RichText) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{5, 1}
}

func (x *Element_RichText) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Element_RichText) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *Element_RichText) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

type Element_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Hint    string `protobuf:"bytes,3,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *Element_Text) Reset() {
	*x = Element_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Shared_proto_block_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Element_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Element_Text) ProtoMessage() {}

func (x *Element_Text) ProtoReflect() protoreflect.Message {
	mi := &file_Shared_proto_block_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Element_Text.ProtoReflect.Descriptor instead.
func (*Element_Text) Descriptor() ([]byte, []int) {
	return file_Shared_proto_block_proto_rawDescGZIP(), []int{5, 2}
}

func (x *Element_Text) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Element_Text) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Element_Text) GetHint() string {
	if x != nil {
		return x.Hint
	}
	return ""
}

var File_Shared_proto_block_proto protoreflect.FileDescriptor

var file_Shared_proto_block_proto_rawDesc = []byte{
	0x0a, 0x18, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd2, 0x02, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x09, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x42, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x99, 0x03, 0x0a, 0x0a, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x68, 0x61, 0x73, 0x4c,
	0x69, 0x6b, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x68, 0x61, 0x73, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x0b, 0x68, 0x61, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x47, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x48, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x1a, 0xc7, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x06, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x08, 0x68, 0x61, 0x73,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x08, 0x65, 0x64,
	0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x73,
	0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x73,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x68, 0x61, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x22, 0x8e, 0x03, 0x0a, 0x07, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x01, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x01, 0x69, 0x12, 0x23, 0x0a, 0x01, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52, 0x01, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6c,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00,
	0x52, 0x02, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x1a, 0x43, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x61, 0x6c, 0x74, 0x1a, 0x46, 0x0a, 0x08, 0x52, 0x69, 0x63, 0x68, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x1a, 0x48,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Shared_proto_block_proto_rawDescOnce sync.Once
	file_Shared_proto_block_proto_rawDescData = file_Shared_proto_block_proto_rawDesc
)

func file_Shared_proto_block_proto_rawDescGZIP() []byte {
	file_Shared_proto_block_proto_rawDescOnce.Do(func() {
		file_Shared_proto_block_proto_rawDescData = protoimpl.X.CompressGZIP(file_Shared_proto_block_proto_rawDescData)
	})
	return file_Shared_proto_block_proto_rawDescData
}

var file_Shared_proto_block_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_Shared_proto_block_proto_goTypes = []interface{}{
	(*Block)(nil),                   // 0: proto.Block
	(*BlockContent)(nil),            // 1: proto.BlockContent
	(*BlockMeta)(nil),               // 2: proto.BlockMeta
	(*Author)(nil),                  // 3: proto.Author
	(*BlockRules)(nil),              // 4: proto.BlockRules
	(*Element)(nil),                 // 5: proto.Element
	(*BlockRules_CommentRules)(nil), // 6: proto.BlockRules.CommentRules
	(*Element_Image)(nil),           // 7: proto.Element.Image
	(*Element_RichText)(nil),        // 8: proto.Element.RichText
	(*Element_Text)(nil),            // 9: proto.Element.Text
}
var file_Shared_proto_block_proto_depIdxs = []int32{
	3,  // 0: proto.Block.authors:type_name -> proto.Author
	5,  // 1: proto.Block.content:type_name -> proto.Element
	4,  // 2: proto.Block.rules:type_name -> proto.BlockRules
	5,  // 3: proto.BlockContent.content:type_name -> proto.Element
	3,  // 4: proto.BlockMeta.authors:type_name -> proto.Author
	6,  // 5: proto.BlockRules.commentRules:type_name -> proto.BlockRules.CommentRules
	7,  // 6: proto.Element.i:type_name -> proto.Element.Image
	9,  // 7: proto.Element.t:type_name -> proto.Element.Text
	8,  // 8: proto.Element.rt:type_name -> proto.Element.RichText
	1,  // 9: proto.Element.child:type_name -> proto.BlockContent
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_Shared_proto_block_proto_init() }
func file_Shared_proto_block_proto_init() {
	if File_Shared_proto_block_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Shared_proto_block_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRules_CommentRules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element_RichText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Shared_proto_block_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Element_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Shared_proto_block_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_Shared_proto_block_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Element_I)(nil),
		(*Element_T)(nil),
		(*Element_Rt)(nil),
		(*Element_Child)(nil),
	}
	file_Shared_proto_block_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Shared_proto_block_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Shared_proto_block_proto_goTypes,
		DependencyIndexes: file_Shared_proto_block_proto_depIdxs,
		MessageInfos:      file_Shared_proto_block_proto_msgTypes,
	}.Build()
	File_Shared_proto_block_proto = out.File
	file_Shared_proto_block_proto_rawDesc = nil
	file_Shared_proto_block_proto_goTypes = nil
	file_Shared_proto_block_proto_depIdxs = nil
}
