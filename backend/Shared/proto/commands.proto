syntax = "proto3";

package proto;

option go_package = "./proto;proto";

import "block.proto";

service FlipFlop {
  // Block
  rpc CreateBlock(CreateRequest) returns (ActionResponse) {}
  rpc DeleteBlock(DeleteRequest) returns (ActionResponse) {}
  rpc UpdateBlock(CreateRequest) returns (ActionResponse) {}

  rpc UpdateBlockRule(BlockRulesRq) returns (ActionResponse) {}
  rpc UpdateBlocMeta(BlockMeta) returns (ActionResponse) {}

  rpc CreateBlockLang(CreateLangRequest) returns (ActionResponse) {}
  rpc DeleteBlockLang(DeleteLangRequest) returns (ActionResponse) {}

  // Rules
  rpc CreateRuleGroup(BlockRulesRq) returns (ActionResponse) {}
  rpc UpdateRuleGroup(BlockRulesRq) returns (ActionResponse) {}
  rpc DeleteRuleGroup(BlockRulesRq) returns (ActionResponse) {}

  // Taxonomy:
  rpc CreateTag(CreateTaxonomy) returns (ActionResponse) {}
  rpc DeleteTag(DeleteTaxonomy) returns (ActionResponse) {}

  rpc CreateCategory(CreateTaxonomy) returns (ActionResponse) {}
  rpc DeleteCategory(DeleteTaxonomy) returns (ActionResponse) {}

  rpc JoinTag(JoinTaxonomy) returns (ActionResponse) {}
  rpc JoinCategory(JoinTaxonomy) returns (ActionResponse) {}
}

message CreateRequest {
    optional string id = 1;
    string name = 2;
    string block_type = 3;
    string description = 4;
    optional BlockRulesRq rules = 5;
    string author = 6;
}

message CreateLangRequest {
    string id = 1;
    string lang_name = 2;
    string lang_code = 3;
    string block_id = 4;
    optional string previousLang = 6;
}

message DeleteRequest {
    string id = 1;
}

message DeleteLangRequest {
    string id = 1;
    string lang_code = 2;
}

message CreateTaxonomy {
    string name = 1;
    string descr = 2;
}

message DeleteTaxonomy {
    string name = 1;
}

message ActionResponse {
    bool isSuceess = 1;
    string id = 2;
    string message = 3;
}

message JoinTaxonomy {
    string block_id = 1;
    repeated string names = 2;
}


message BlockRulesRq {
 string block_id = 1;
  oneof block_rules {
    string rule_name = 2;
    BlockRules rules = 3;
  }
}
