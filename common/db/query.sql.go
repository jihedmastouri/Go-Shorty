// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: query.sql

package db

import (
	"context"
)

const getBlocks = `-- name: GetBlocks :many
SELECT id, block_type_id, comments_type, has_comments, has_likes, created_at, updated_at, author FROM blocks ORDER BY name
`

func (q *Queries) GetBlocks(ctx context.Context) ([]Block, error) {
	rows, err := q.db.QueryContext(ctx, getBlocks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Block
	for rows.Next() {
		var i Block
		if err := rows.Scan(
			&i.ID,
			&i.BlockTypeID,
			&i.CommentsType,
			&i.HasComments,
			&i.HasLikes,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Author,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
